@model MvcFrilance.ViewModels.EditFrilancerModel

@{
    ViewData["Title"] = "Edit";
}

<h2>Редактирование</h2>

<div class="row">
    <div class="col-md-4">
        <form method="post" asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Login" class="control-label"></label>
                <input asp-for="Login" class="form-control" />
                <span asp-validation-for="Login" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NickName" class="control-label"></label>
                <input asp-for="NickName" class="form-control" />
                <span asp-validation-for="NickName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            @foreach (var spell in ViewBag.Spells)
            {
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="Spells" value="@spell" id="@spell"
                    @(Model.Spells.Contains(spell)?"checked":"") />
                    <label class="form-check-label" for="@spell">
                        Checked checkbox
                    </label>
                </div>
            }
            <div class="hstack gap-3">
                <button type="button" class="btn btn-success" id="addButton">+</button>
                @foreach (var item in Model.Tags)
                {
                    <div class="input-group input-group-sm mb-3">
                        <span class="input-group-text">#</span>
                        <input class="badge rounded-pill bg-secondary" placeholder="Tag" list="defaultTags" name="Tags"
                        minlength="3" pattern="^\w+$" />
                        <button class="btn btn-danger" type="button">-</button>
                    </div>
                }
            </div>
            <datalist id="defaultTags">
                @foreach (var item in ViewBag.Tags)
                {
                    <option>@item</option>
                }
            </datalist>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<script>

    var addButton = document.querySelector("#addButton");
    var removeButtons = document.querySelectorAll(".btn btn-danger");
    var divMain = document.querySelector(".hstack gap-3")

    function RemoveTag() {
        let btn = this.n
        btn.
    }

    function AddTag() {
        let divController = document.createElement("div");
        divController.setAttribute("class", "input-group input-group-sm mb-3");
        let newSpan = document.createElement("span");
        newSpan.setAttribute("class", "input-group-text");
        newSpan.textContent = "#";
        let newInput = document.createElement("input");
        newInput.setAttribute("class", "badge rounded-pill bg-secondary");
        newInput.setAttribute("placeholder", "Tag");
        newInput.setAttribute("list", "defaultTags");
        newInput.setAttribute("name", "Tags");
        newInput.setAttribute("minlength", "3");
        newInput.setAttribute("pattern", "^\w+$");
        let newButton = document.createElement("button");
        newButton.setAttribute("class", "btn btn-danger");
        newButton.setAttribute("type", "button");
        newButton.textContent = "-";
        divController.appendChild(newSpan);
        divController.appendChild(newInput);
        divController.appendChild(newButton);
        divMain.appendChild(divController);
    }

    addButton.addEventListener("click", AddTag);

    for (int i = 0; i < removeButtons.length; i++)
    {
        removeButtons[i].addEventListener("click",)
    }

</script>
